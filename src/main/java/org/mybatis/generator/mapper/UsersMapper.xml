<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.mybatis.generator.dao.UsersMapper">
  <resultMap id="BaseResultMap" type="org.mybatis.generator.domain.Users">
    <!--
      This element was generated on 2024-03-07 17:22:11.
    -->
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="char_test" jdbcType="CHAR" property="charTest" />
    <result column="timestamp_test" jdbcType="TIMESTAMP" property="timestampTest" />
    <result column="datetime_test" jdbcType="TIMESTAMP" property="datetimeTest" />
    <result column="type" jdbcType="VARCHAR" property="type" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.mybatis.generator.domain.UsersWithBLOBs">
    <!--
      This element was generated on 2024-03-07 17:22:11.
    -->
    <result column="blob_test" jdbcType="LONGVARBINARY" property="blobTest" />
    <result column="text_test" jdbcType="LONGVARCHAR" property="textTest" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      This element was generated on 2024-03-07 17:22:11.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      This element was generated on 2024-03-07 17:22:11.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      This element was generated on 2024-03-07 17:22:11.
    -->
    user_id, username, email, password, char_test, timestamp_test, datetime_test, type
  </sql>
  <sql id="Blob_Column_List">
    <!--
      This element was generated on 2024-03-07 17:22:11.
    -->
    blob_test, text_test
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="org.mybatis.generator.domain.UsersExample" resultMap="ResultMapWithBLOBs">
    <!--
      This element was generated on 2024-03-07 17:22:11.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="org.mybatis.generator.domain.UsersExample" resultMap="BaseResultMap">
    <!--
      This element was generated on 2024-03-07 17:22:11.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      This element was generated on 2024-03-07 17:22:11.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Users
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      This element was generated on 2024-03-07 17:22:11.
    -->
    delete from Users
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.mybatis.generator.domain.UsersExample">
    <!--
      This element was generated on 2024-03-07 17:22:11.
    -->
    delete from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.mybatis.generator.domain.UsersWithBLOBs">
    <!--
      This element was generated on 2024-03-07 17:22:11.
    -->
    insert into Users (user_id, username, email, 
      password, char_test, timestamp_test, 
      datetime_test, type, blob_test, 
      text_test)
    values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{charTest,jdbcType=CHAR}, #{timestampTest,jdbcType=TIMESTAMP}, 
      #{datetimeTest,jdbcType=TIMESTAMP}, #{type,jdbcType=VARCHAR}, #{blobTest,jdbcType=LONGVARBINARY}, 
      #{textTest,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.mybatis.generator.domain.UsersWithBLOBs">
    <!--
      This element was generated on 2024-03-07 17:22:11.
    -->
    insert into Users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="charTest != null">
        char_test,
      </if>
      <if test="timestampTest != null">
        timestamp_test,
      </if>
      <if test="datetimeTest != null">
        datetime_test,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="blobTest != null">
        blob_test,
      </if>
      <if test="textTest != null">
        text_test,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="charTest != null">
        #{charTest,jdbcType=CHAR},
      </if>
      <if test="timestampTest != null">
        #{timestampTest,jdbcType=TIMESTAMP},
      </if>
      <if test="datetimeTest != null">
        #{datetimeTest,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="blobTest != null">
        #{blobTest,jdbcType=LONGVARBINARY},
      </if>
      <if test="textTest != null">
        #{textTest,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.mybatis.generator.domain.UsersExample" resultType="java.lang.Long">
    <!--
      This element was generated on 2024-03-07 17:22:11.
    -->
    select count(*) from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      This element was generated on 2024-03-07 17:22:11.
    -->
    update Users
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.charTest != null">
        char_test = #{record.charTest,jdbcType=CHAR},
      </if>
      <if test="record.timestampTest != null">
        timestamp_test = #{record.timestampTest,jdbcType=TIMESTAMP},
      </if>
      <if test="record.datetimeTest != null">
        datetime_test = #{record.datetimeTest,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.blobTest != null">
        blob_test = #{record.blobTest,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.textTest != null">
        text_test = #{record.textTest,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      This element was generated on 2024-03-07 17:22:11.
    -->
    update Users
    set user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      char_test = #{record.charTest,jdbcType=CHAR},
      timestamp_test = #{record.timestampTest,jdbcType=TIMESTAMP},
      datetime_test = #{record.datetimeTest,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=VARCHAR},
      blob_test = #{record.blobTest,jdbcType=LONGVARBINARY},
      text_test = #{record.textTest,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      This element was generated on 2024-03-07 17:22:11.
    -->
    update Users
    set user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      char_test = #{record.charTest,jdbcType=CHAR},
      timestamp_test = #{record.timestampTest,jdbcType=TIMESTAMP},
      datetime_test = #{record.datetimeTest,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.mybatis.generator.domain.UsersWithBLOBs">
    <!--
      This element was generated on 2024-03-07 17:22:11.
    -->
    update Users
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="charTest != null">
        char_test = #{charTest,jdbcType=CHAR},
      </if>
      <if test="timestampTest != null">
        timestamp_test = #{timestampTest,jdbcType=TIMESTAMP},
      </if>
      <if test="datetimeTest != null">
        datetime_test = #{datetimeTest,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="blobTest != null">
        blob_test = #{blobTest,jdbcType=LONGVARBINARY},
      </if>
      <if test="textTest != null">
        text_test = #{textTest,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.mybatis.generator.domain.UsersWithBLOBs">
    <!--
      This element was generated on 2024-03-07 17:22:11.
    -->
    update Users
    set username = #{username,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      char_test = #{charTest,jdbcType=CHAR},
      timestamp_test = #{timestampTest,jdbcType=TIMESTAMP},
      datetime_test = #{datetimeTest,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=VARCHAR},
      blob_test = #{blobTest,jdbcType=LONGVARBINARY},
      text_test = #{textTest,jdbcType=LONGVARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.mybatis.generator.domain.Users">
    <!--
      This element was generated on 2024-03-07 17:22:11.
    -->
    update Users
    set username = #{username,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      char_test = #{charTest,jdbcType=CHAR},
      timestamp_test = #{timestampTest,jdbcType=TIMESTAMP},
      datetime_test = #{datetimeTest,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="org.mybatis.generator.domain.Users">
    <!--
      This element was generated on 2024-03-07 15:15:42.
    -->
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="char_test" jdbcType="CHAR" property="charTest" />
    <result column="timestamp_test" jdbcType="TIMESTAMP" property="timestampTest" />
    <result column="datetime_test" jdbcType="TIMESTAMP" property="datetimeTest" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.mybatis.generator.domain.UsersWithBLOBs">
    <!--
      This element was generated on 2024-03-07 15:15:42.
    -->
    <result column="blob_test" jdbcType="LONGVARBINARY" property="blobTest" />
    <result column="text_test" jdbcType="LONGVARCHAR" property="textTest" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      This element was generated on 2024-03-07 15:15:42.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      This element was generated on 2024-03-07 15:15:42.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      This element was generated on 2024-03-07 15:15:42.
    -->
    user_id, username, email, password, char_test, timestamp_test, datetime_test
  </sql>
  <sql id="Blob_Column_List">
    <!--
      This element was generated on 2024-03-07 15:15:42.
    -->
    blob_test, text_test
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="org.mybatis.generator.domain.UsersExample" resultMap="ResultMapWithBLOBs">
    <!--
      This element was generated on 2024-03-07 15:15:42.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="org.mybatis.generator.domain.UsersExample" resultMap="BaseResultMap">
    <!--
      This element was generated on 2024-03-07 15:15:42.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      This element was generated on 2024-03-07 15:15:42.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Users
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      This element was generated on 2024-03-07 15:15:42.
    -->
    delete from Users
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.mybatis.generator.domain.UsersExample">
    <!--
      This element was generated on 2024-03-07 15:15:42.
    -->
    delete from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.mybatis.generator.domain.UsersWithBLOBs">
    <!--
      This element was generated on 2024-03-07 15:15:42.
    -->
    insert into Users (user_id, username, email, 
      password, char_test, timestamp_test, 
      datetime_test, blob_test, text_test
      )
    values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{charTest,jdbcType=CHAR}, #{timestampTest,jdbcType=TIMESTAMP}, 
      #{datetimeTest,jdbcType=TIMESTAMP}, #{blobTest,jdbcType=LONGVARBINARY}, #{textTest,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.mybatis.generator.domain.UsersWithBLOBs">
    <!--
      This element was generated on 2024-03-07 15:15:42.
    -->
    insert into Users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="charTest != null">
        char_test,
      </if>
      <if test="timestampTest != null">
        timestamp_test,
      </if>
      <if test="datetimeTest != null">
        datetime_test,
      </if>
      <if test="blobTest != null">
        blob_test,
      </if>
      <if test="textTest != null">
        text_test,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="charTest != null">
        #{charTest,jdbcType=CHAR},
      </if>
      <if test="timestampTest != null">
        #{timestampTest,jdbcType=TIMESTAMP},
      </if>
      <if test="datetimeTest != null">
        #{datetimeTest,jdbcType=TIMESTAMP},
      </if>
      <if test="blobTest != null">
        #{blobTest,jdbcType=LONGVARBINARY},
      </if>
      <if test="textTest != null">
        #{textTest,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.mybatis.generator.domain.UsersExample" resultType="java.lang.Long">
    <!--
      This element was generated on 2024-03-07 15:15:42.
    -->
    select count(*) from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      This element was generated on 2024-03-07 15:15:42.
    -->
    update Users
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.charTest != null">
        char_test = #{record.charTest,jdbcType=CHAR},
      </if>
      <if test="record.timestampTest != null">
        timestamp_test = #{record.timestampTest,jdbcType=TIMESTAMP},
      </if>
      <if test="record.datetimeTest != null">
        datetime_test = #{record.datetimeTest,jdbcType=TIMESTAMP},
      </if>
      <if test="record.blobTest != null">
        blob_test = #{record.blobTest,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.textTest != null">
        text_test = #{record.textTest,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      This element was generated on 2024-03-07 15:15:42.
    -->
    update Users
    set user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      char_test = #{record.charTest,jdbcType=CHAR},
      timestamp_test = #{record.timestampTest,jdbcType=TIMESTAMP},
      datetime_test = #{record.datetimeTest,jdbcType=TIMESTAMP},
      blob_test = #{record.blobTest,jdbcType=LONGVARBINARY},
      text_test = #{record.textTest,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      This element was generated on 2024-03-07 15:15:42.
    -->
    update Users
    set user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      char_test = #{record.charTest,jdbcType=CHAR},
      timestamp_test = #{record.timestampTest,jdbcType=TIMESTAMP},
      datetime_test = #{record.datetimeTest,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.mybatis.generator.domain.UsersWithBLOBs">
    <!--
      This element was generated on 2024-03-07 15:15:42.
    -->
    update Users
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="charTest != null">
        char_test = #{charTest,jdbcType=CHAR},
      </if>
      <if test="timestampTest != null">
        timestamp_test = #{timestampTest,jdbcType=TIMESTAMP},
      </if>
      <if test="datetimeTest != null">
        datetime_test = #{datetimeTest,jdbcType=TIMESTAMP},
      </if>
      <if test="blobTest != null">
        blob_test = #{blobTest,jdbcType=LONGVARBINARY},
      </if>
      <if test="textTest != null">
        text_test = #{textTest,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.mybatis.generator.domain.UsersWithBLOBs">
    <!--
      This element was generated on 2024-03-07 15:15:42.
    -->
    update Users
    set username = #{username,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      char_test = #{charTest,jdbcType=CHAR},
      timestamp_test = #{timestampTest,jdbcType=TIMESTAMP},
      datetime_test = #{datetimeTest,jdbcType=TIMESTAMP},
      blob_test = #{blobTest,jdbcType=LONGVARBINARY},
      text_test = #{textTest,jdbcType=LONGVARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.mybatis.generator.domain.Users">
    <!--
      This element was generated on 2024-03-07 15:15:42.
    -->
    update Users
    set username = #{username,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      char_test = #{charTest,jdbcType=CHAR},
      timestamp_test = #{timestampTest,jdbcType=TIMESTAMP},
      datetime_test = #{datetimeTest,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="org.mybatis.generator.domain.Users">
    <!--
      This element was generated on 2024-03-07 15:14:57.
    -->
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="char_test" jdbcType="CHAR" property="charTest" />
    <result column="timestamp_test" jdbcType="TIMESTAMP" property="timestampTest" />
    <result column="datetime_test" jdbcType="TIMESTAMP" property="datetimeTest" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.mybatis.generator.domain.UsersWithBLOBs">
    <!--
      This element was generated on 2024-03-07 15:14:57.
    -->
    <result column="blob_test" jdbcType="LONGVARBINARY" property="blobTest" />
    <result column="text_test" jdbcType="LONGVARCHAR" property="textTest" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      This element was generated on 2024-03-07 15:14:57.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      This element was generated on 2024-03-07 15:14:57.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      This element was generated on 2024-03-07 15:14:57.
    -->
    user_id, username, email, password, char_test, timestamp_test, datetime_test
  </sql>
  <sql id="Blob_Column_List">
    <!--
      This element was generated on 2024-03-07 15:14:57.
    -->
    blob_test, text_test
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="org.mybatis.generator.domain.UsersExample" resultMap="ResultMapWithBLOBs">
    <!--
      This element was generated on 2024-03-07 15:14:57.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="org.mybatis.generator.domain.UsersExample" resultMap="BaseResultMap">
    <!--
      This element was generated on 2024-03-07 15:14:57.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      This element was generated on 2024-03-07 15:14:57.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Users
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      This element was generated on 2024-03-07 15:14:57.
    -->
    delete from Users
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.mybatis.generator.domain.UsersExample">
    <!--
      This element was generated on 2024-03-07 15:14:57.
    -->
    delete from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.mybatis.generator.domain.UsersWithBLOBs">
    <!--
      This element was generated on 2024-03-07 15:14:57.
    -->
    insert into Users (user_id, username, email, 
      password, char_test, timestamp_test, 
      datetime_test, blob_test, text_test
      )
    values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{charTest,jdbcType=CHAR}, #{timestampTest,jdbcType=TIMESTAMP}, 
      #{datetimeTest,jdbcType=TIMESTAMP}, #{blobTest,jdbcType=LONGVARBINARY}, #{textTest,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.mybatis.generator.domain.UsersWithBLOBs">
    <!--
      This element was generated on 2024-03-07 15:14:57.
    -->
    insert into Users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="charTest != null">
        char_test,
      </if>
      <if test="timestampTest != null">
        timestamp_test,
      </if>
      <if test="datetimeTest != null">
        datetime_test,
      </if>
      <if test="blobTest != null">
        blob_test,
      </if>
      <if test="textTest != null">
        text_test,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="charTest != null">
        #{charTest,jdbcType=CHAR},
      </if>
      <if test="timestampTest != null">
        #{timestampTest,jdbcType=TIMESTAMP},
      </if>
      <if test="datetimeTest != null">
        #{datetimeTest,jdbcType=TIMESTAMP},
      </if>
      <if test="blobTest != null">
        #{blobTest,jdbcType=LONGVARBINARY},
      </if>
      <if test="textTest != null">
        #{textTest,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.mybatis.generator.domain.UsersExample" resultType="java.lang.Long">
    <!--
      This element was generated on 2024-03-07 15:14:57.
    -->
    select count(*) from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      This element was generated on 2024-03-07 15:14:57.
    -->
    update Users
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.charTest != null">
        char_test = #{record.charTest,jdbcType=CHAR},
      </if>
      <if test="record.timestampTest != null">
        timestamp_test = #{record.timestampTest,jdbcType=TIMESTAMP},
      </if>
      <if test="record.datetimeTest != null">
        datetime_test = #{record.datetimeTest,jdbcType=TIMESTAMP},
      </if>
      <if test="record.blobTest != null">
        blob_test = #{record.blobTest,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.textTest != null">
        text_test = #{record.textTest,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      This element was generated on 2024-03-07 15:14:57.
    -->
    update Users
    set user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      char_test = #{record.charTest,jdbcType=CHAR},
      timestamp_test = #{record.timestampTest,jdbcType=TIMESTAMP},
      datetime_test = #{record.datetimeTest,jdbcType=TIMESTAMP},
      blob_test = #{record.blobTest,jdbcType=LONGVARBINARY},
      text_test = #{record.textTest,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      This element was generated on 2024-03-07 15:14:57.
    -->
    update Users
    set user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      char_test = #{record.charTest,jdbcType=CHAR},
      timestamp_test = #{record.timestampTest,jdbcType=TIMESTAMP},
      datetime_test = #{record.datetimeTest,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.mybatis.generator.domain.UsersWithBLOBs">
    <!--
      This element was generated on 2024-03-07 15:14:57.
    -->
    update Users
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="charTest != null">
        char_test = #{charTest,jdbcType=CHAR},
      </if>
      <if test="timestampTest != null">
        timestamp_test = #{timestampTest,jdbcType=TIMESTAMP},
      </if>
      <if test="datetimeTest != null">
        datetime_test = #{datetimeTest,jdbcType=TIMESTAMP},
      </if>
      <if test="blobTest != null">
        blob_test = #{blobTest,jdbcType=LONGVARBINARY},
      </if>
      <if test="textTest != null">
        text_test = #{textTest,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.mybatis.generator.domain.UsersWithBLOBs">
    <!--
      This element was generated on 2024-03-07 15:14:57.
    -->
    update Users
    set username = #{username,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      char_test = #{charTest,jdbcType=CHAR},
      timestamp_test = #{timestampTest,jdbcType=TIMESTAMP},
      datetime_test = #{datetimeTest,jdbcType=TIMESTAMP},
      blob_test = #{blobTest,jdbcType=LONGVARBINARY},
      text_test = #{textTest,jdbcType=LONGVARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.mybatis.generator.domain.Users">
    <!--
      This element was generated on 2024-03-07 15:14:57.
    -->
    update Users
    set username = #{username,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      char_test = #{charTest,jdbcType=CHAR},
      timestamp_test = #{timestampTest,jdbcType=TIMESTAMP},
      datetime_test = #{datetimeTest,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="org.mybatis.generator.domain.Users">
    <!--
      This element was generated on 2024-03-07 11:34:12.
    -->
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="char_test" jdbcType="CHAR" property="charTest" />
    <result column="timestamp_test" jdbcType="TIMESTAMP" property="timestampTest" />
    <result column="datetime_test" jdbcType="TIMESTAMP" property="datetimeTest" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.mybatis.generator.domain.UsersWithBLOBs">
    <!--
      This element was generated on 2024-03-07 11:34:12.
    -->
    <result column="blob_test" jdbcType="LONGVARBINARY" property="blobTest" />
    <result column="text_test" jdbcType="LONGVARCHAR" property="textTest" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      This element was generated on 2024-03-07 11:34:12.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      This element was generated on 2024-03-07 11:34:12.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      This element was generated on 2024-03-07 11:34:12.
    -->
    user_id, username, email, password, char_test, timestamp_test, datetime_test
  </sql>
  <sql id="Blob_Column_List">
    <!--
      This element was generated on 2024-03-07 11:34:12.
    -->
    blob_test, text_test
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="org.mybatis.generator.domain.UsersExample" resultMap="ResultMapWithBLOBs">
    <!--
      This element was generated on 2024-03-07 11:34:12.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="org.mybatis.generator.domain.UsersExample" resultMap="BaseResultMap">
    <!--
      This element was generated on 2024-03-07 11:34:12.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      This element was generated on 2024-03-07 11:34:12.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Users
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      This element was generated on 2024-03-07 11:34:12.
    -->
    delete from Users
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.mybatis.generator.domain.UsersExample">
    <!--
      This element was generated on 2024-03-07 11:34:12.
    -->
    delete from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.mybatis.generator.domain.UsersWithBLOBs">
    <!--
      This element was generated on 2024-03-07 11:34:12.
    -->
    insert into Users (user_id, username, email, 
      password, char_test, timestamp_test, 
      datetime_test, blob_test, text_test
      )
    values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{charTest,jdbcType=CHAR}, #{timestampTest,jdbcType=TIMESTAMP}, 
      #{datetimeTest,jdbcType=TIMESTAMP}, #{blobTest,jdbcType=LONGVARBINARY}, #{textTest,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.mybatis.generator.domain.UsersWithBLOBs">
    <!--
      This element was generated on 2024-03-07 11:34:12.
    -->
    insert into Users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="charTest != null">
        char_test,
      </if>
      <if test="timestampTest != null">
        timestamp_test,
      </if>
      <if test="datetimeTest != null">
        datetime_test,
      </if>
      <if test="blobTest != null">
        blob_test,
      </if>
      <if test="textTest != null">
        text_test,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="charTest != null">
        #{charTest,jdbcType=CHAR},
      </if>
      <if test="timestampTest != null">
        #{timestampTest,jdbcType=TIMESTAMP},
      </if>
      <if test="datetimeTest != null">
        #{datetimeTest,jdbcType=TIMESTAMP},
      </if>
      <if test="blobTest != null">
        #{blobTest,jdbcType=LONGVARBINARY},
      </if>
      <if test="textTest != null">
        #{textTest,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.mybatis.generator.domain.UsersExample" resultType="java.lang.Long">
    <!--
      This element was generated on 2024-03-07 11:34:12.
    -->
    select count(*) from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      This element was generated on 2024-03-07 11:34:12.
    -->
    update Users
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.charTest != null">
        char_test = #{record.charTest,jdbcType=CHAR},
      </if>
      <if test="record.timestampTest != null">
        timestamp_test = #{record.timestampTest,jdbcType=TIMESTAMP},
      </if>
      <if test="record.datetimeTest != null">
        datetime_test = #{record.datetimeTest,jdbcType=TIMESTAMP},
      </if>
      <if test="record.blobTest != null">
        blob_test = #{record.blobTest,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.textTest != null">
        text_test = #{record.textTest,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      This element was generated on 2024-03-07 11:34:12.
    -->
    update Users
    set user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      char_test = #{record.charTest,jdbcType=CHAR},
      timestamp_test = #{record.timestampTest,jdbcType=TIMESTAMP},
      datetime_test = #{record.datetimeTest,jdbcType=TIMESTAMP},
      blob_test = #{record.blobTest,jdbcType=LONGVARBINARY},
      text_test = #{record.textTest,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      This element was generated on 2024-03-07 11:34:12.
    -->
    update Users
    set user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      char_test = #{record.charTest,jdbcType=CHAR},
      timestamp_test = #{record.timestampTest,jdbcType=TIMESTAMP},
      datetime_test = #{record.datetimeTest,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.mybatis.generator.domain.UsersWithBLOBs">
    <!--
      This element was generated on 2024-03-07 11:34:12.
    -->
    update Users
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="charTest != null">
        char_test = #{charTest,jdbcType=CHAR},
      </if>
      <if test="timestampTest != null">
        timestamp_test = #{timestampTest,jdbcType=TIMESTAMP},
      </if>
      <if test="datetimeTest != null">
        datetime_test = #{datetimeTest,jdbcType=TIMESTAMP},
      </if>
      <if test="blobTest != null">
        blob_test = #{blobTest,jdbcType=LONGVARBINARY},
      </if>
      <if test="textTest != null">
        text_test = #{textTest,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.mybatis.generator.domain.UsersWithBLOBs">
    <!--
      This element was generated on 2024-03-07 11:34:12.
    -->
    update Users
    set username = #{username,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      char_test = #{charTest,jdbcType=CHAR},
      timestamp_test = #{timestampTest,jdbcType=TIMESTAMP},
      datetime_test = #{datetimeTest,jdbcType=TIMESTAMP},
      blob_test = #{blobTest,jdbcType=LONGVARBINARY},
      text_test = #{textTest,jdbcType=LONGVARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.mybatis.generator.domain.Users">
    <!--
      This element was generated on 2024-03-07 11:34:12.
    -->
    update Users
    set username = #{username,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      char_test = #{charTest,jdbcType=CHAR},
      timestamp_test = #{timestampTest,jdbcType=TIMESTAMP},
      datetime_test = #{datetimeTest,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="org.mybatis.generator.domain.Users">
    <!--
      This element was generated on 2024-03-06 18:10:37.
    -->
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      This element was generated on 2024-03-06 18:10:37.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      This element was generated on 2024-03-06 18:10:37.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      This element was generated on 2024-03-06 18:10:37.
    -->
    user_id, username, email, password
  </sql>
  <select id="selectByExample" parameterType="org.mybatis.generator.domain.UsersExample" resultMap="BaseResultMap">
    <!--
      This element was generated on 2024-03-06 18:10:37.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      This element was generated on 2024-03-06 18:10:37.
    -->
    select 
    <include refid="Base_Column_List" />
    from Users
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      This element was generated on 2024-03-06 18:10:37.
    -->
    delete from Users
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.mybatis.generator.domain.UsersExample">
    <!--
      This element was generated on 2024-03-06 18:10:37.
    -->
    delete from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.mybatis.generator.domain.Users">
    <!--
      This element was generated on 2024-03-06 18:10:37.
    -->
    insert into Users (user_id, username, email, 
      password)
    values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.mybatis.generator.domain.Users">
    <!--
      This element was generated on 2024-03-06 18:10:37.
    -->
    insert into Users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.mybatis.generator.domain.UsersExample" resultType="java.lang.Long">
    <!--
      This element was generated on 2024-03-06 18:10:37.
    -->
    select count(*) from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      This element was generated on 2024-03-06 18:10:37.
    -->
    update Users
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      This element was generated on 2024-03-06 18:10:37.
    -->
    update Users
    set user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.mybatis.generator.domain.Users">
    <!--
      This element was generated on 2024-03-06 18:10:37.
    -->
    update Users
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.mybatis.generator.domain.Users">
    <!--
      This element was generated on 2024-03-06 18:10:37.
    -->
    update Users
    set username = #{username,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>